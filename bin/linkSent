#!/usr/bin/perl -w

use strict;
use utf8;
use POSIX;
#  use this to split lines for sentences
use Lingua::EN::Sentence qw( get_sentences  );
use links::File;
use Pod::Usage;

#  autoflush
select((select(STDERR), $| = 1)[0]);

# encoding pragmas follow any includes like "use"
# the handles case where I/O is all UTF8, like Wikipedia
use open ':utf8';
binmode STDIN, ":utf8";
binmode STDERR, ":utf8";

&Lingua::EN::Sentence::add_acronyms( ("U.S", "D.C", "U.S.A") );

while ( <> ) {
    if ( !/^text / ) {
	print;
    } else {
	chomp();
	s/^text //;
	my $sentences=get_sentences($_);
	if ( !defined($sentences) ) {
	    print STDERR "Cannot get sentences for $_\n";
	}
	foreach my $x (@$sentences) {
	    # $x=&links::File::cleanpunct($x);
	    print "text $x\n";
	}
    }
}

=head1 NAME
  
linkSent - Run the Perl sentence splitter, 
I<Lingua::EN::Sentence>, on the links file. 

=head1 SYNOPSIS
    
linkSent < LINKSFILE-WITHOUT > LINKSFILE-WITH-SENTENCES-SPLIT

=head1 DESCRIPTION

Input file of links assumed to be in UTF-8 encoding
in the format given in I<linkTables>(1).
Output file has the text lines split across sentences.
I<Warning:> its rather slow!

Reads standard input, out to standard out.

=head1 SEE ALSO

I<Lingua::EN::Sentence>(3), 
I<linkTables>(1).

text-bags is in 
F<http://github.com>

=head1 AUTHOR

Wray Buntine

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2012 Wray Buntine

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.4 or,
at your option, any later version of Perl 5 you may have available.

=cut
